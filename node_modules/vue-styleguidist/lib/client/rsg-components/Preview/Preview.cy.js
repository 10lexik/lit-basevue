import * as React from 'react';
import { mount } from 'cypress/react';
import Context from 'rsg-components/Context';
import slots from 'rsg-components/slots';
import Fixture from 'rsg-components/VsgReactComponent/Fixture';
import Preview from './Preview';
var _require = function _require() {
  return React;
};
var Provider = function Provider(_ref) {
  var children = _ref.children,
    _ref$jssThemedEditor = _ref.jssThemedEditor,
    jssThemedEditor = _ref$jssThemedEditor === void 0 ? true : _ref$jssThemedEditor,
    _ref$jsxInExamples = _ref.jsxInExamples,
    jsxInExamples = _ref$jsxInExamples === void 0 ? false : _ref$jsxInExamples;
  var config = {
    usageMode: 'expand',
    exampleMode: 'expand',
    jssThemedEditor: jssThemedEditor,
    jsxInExamples: jsxInExamples,
    pagePerSection: true
  };
  return /*#__PURE__*/React.createElement(Context.Provider, {
    value: {
      slots: slots(config),
      config: config
    }
  }, children);
};
var evalInContext = function evalInContext(a) {
  return (
    // eslint-disable-next-line no-new-func
    new Function('require', 'const React = require("react");' + a).bind(null, _require)
  );
};
describe('Preview', {
  viewportHeight: 680
}, function () {
  it('renders a Vue Component with one head', function () {
    mount( /*#__PURE__*/React.createElement("div", {
      style: {
        padding: '24px'
      }
    }, /*#__PURE__*/React.createElement(Provider, null, /*#__PURE__*/React.createElement(Preview, {
      depth: 1,
      usageMode: "expand",
      exampleMode: "expand",
      component: Fixture,
      code: "<button>Code: OK</button>",
      evalInContext: evalInContext
    }))));
    cy.get('button').should('have.length', 1);
  });
  it('renders a Vue Component with two heads', function () {
    mount( /*#__PURE__*/React.createElement("div", {
      style: {
        padding: '24px'
      }
    }, /*#__PURE__*/React.createElement(Provider, null, /*#__PURE__*/React.createElement(Preview, {
      depth: 1,
      usageMode: "expand",
      exampleMode: "expand",
      component: Fixture,
      code: "\n              <button>1st Button</button>\n              <button>2nd Button</button>\n            ",
      evalInContext: evalInContext
    }))));
    cy.get('button').should('have.length', 2);
  });
});