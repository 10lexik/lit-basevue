import { __awaiter, __generator, __makeTemplateObject } from "tslib";
import { mount } from 'cypress/vue2';
import 'prismjs/themes/prism-coy.css';
import dedent from 'dedent';
import './index.cy.css';
import getHighlighter from './index';
var highlight;
describe('VueInbrowserPrismjsHighlighter', function () {
    before(function () { return __awaiter(void 0, void 0, void 0, function () {
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, getHighlighter('error-squiggles')];
                case 1:
                    highlight = _a.sent();
                    return [2 /*return*/];
            }
        });
    }); });
    it('highlights examples with both a script and a script setup', function () {
        var code = dedent(templateObject_1 || (templateObject_1 = __makeTemplateObject(["<script lang=\"ts\">\n                        interface A {\n                          a: number\n                        }\n                        </script>\n                        <script lang=\"ts\" setup>\n                        import { ref, h } from 'vue'\n\n                        const MyButton = () => {\n                          return h('button', \n                            {\n                              style: { color: 'red' },\n                              \"data-cy\": \"my-button\"\n                            },\n                            'inline component'\n                          )\n                        }\n\n                        const msg = ref(\"Push Me\")\n                        </script>\n\n                        <template>\n                          <div class=\"hello\">\n                            <h1>Colored Text</h1>\n                            <input v-model=\"msg\">\n                            <div>\n                              {{ msg }}\n                            </div>\n                            <div>\n                              <MyButton/>\n                            </div>\n                          </div>\n                        </template>"], ["<script lang=\"ts\">\n                        interface A {\n                          a: number\n                        }\n                        </script>\n                        <script lang=\"ts\" setup>\n                        import { ref, h } from 'vue'\n\n                        const MyButton = () => {\n                          return h('button', \n                            {\n                              style: { color: 'red' },\n                              \"data-cy\": \"my-button\"\n                            },\n                            'inline component'\n                          )\n                        }\n\n                        const msg = ref(\"Push Me\")\n                        </script>\n\n                        <template>\n                          <div class=\"hello\">\n                            <h1>Colored Text</h1>\n                            <input v-model=\"msg\">\n                            <div>\n                              {{ msg }}\n                            </div>\n                            <div>\n                              <MyButton/>\n                            </div>\n                          </div>\n                        </template>"])));
        mount({
            data: function () { return ({
                html: highlight('vue-sfc')(code)
            }); },
            template: "<pre v-html=\"html\" />"
        });
        cy.get('pre').should('have.text', code);
    });
});
var templateObject_1;
//# sourceMappingURL=index.cy.vue3.js.map